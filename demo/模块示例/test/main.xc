类 主窗口类 继承 窗口类
	[绑定信息] //IDE自动生成的UI绑定信息(UI变量绑定,事件绑定), 不建议新人手动修改, 可收缩隐藏
		[窗口事件]
			[窗口事件_即将销毁, 启动窗口_即将销毁, 1]
		[布局类, _布局元素_顶部标题栏, "布局元素_顶部标题栏"]
		[布局类, _布局元素_窗口标题区, "布局元素_窗口标题区"]
		[形状文本类, _形状文本_窗口标题, "形状文本_窗口标题"]
		[布局类, _布局元素_按钮控制区, "布局元素_按钮控制区"]
		[按钮类, _按钮_最小化, "按钮_最小化"]
		[按钮类, _按钮_最大化, "按钮_最大化"]
		[按钮类, _按钮_关闭, "按钮_关闭"]
		[按钮类, _按钮1, "按钮_初始化"]
			[元素事件_按钮点击, 按钮_初始化_按钮点击, 1]
		[编辑框类, _编辑框_路径, "编辑框_路径"]
		[布局类, _布局元素1, "布局元素1"]
		[按钮类, _按钮_绑定测试, "按钮_绑定测试"]
			[元素事件_按钮点击, 按钮_绑定测试_按钮点击, 1]
		[按钮类, _按钮_后台截图, "按钮_后台截图"]
			[元素事件_按钮点击, 按钮_后台截图_按钮点击, 1]
		[按钮类, _按钮_后台找图, "按钮_后台找图"]
			[元素事件_按钮点击, 按钮_后台找图_按钮点击, 1]
		[按钮类, _按钮_OP鼠标, "按钮_OP鼠标"]
			[元素事件_按钮点击, 按钮_OP鼠标_按钮点击, 1]
		[按钮类, _按钮_雷电输入, "按钮_雷电输入"]
			[元素事件_按钮点击, 按钮_雷电输入_按钮点击, 1]
		[按钮类, _按钮_雷电点击, "按钮_雷电点击"]
			[元素事件_按钮点击, 按钮_雷电点击_按钮点击, 1]
		[编辑框类, _编辑框_日志, "编辑框_日志"]
	文本型  _布局文件 = "main.xml"//关联的UI窗口布局文件
	函数 整型 运行() //窗口启动函数, 优先自动处理内部(加载窗口布局文件, 绑定UI变量, 注册UI事件), 然后窗口创建完成, 调用用户代码
		//此处窗口已创建完成, 用户可在此处操作或导入初始数据到UI
		显示(真)  //显示出窗口
		返回 0
	函数 UI事件 整型 按钮_初始化_按钮点击(元素句柄 来源句柄, 逻辑型 *是否拦截)
		初始化()
		返回 0
	函数 UI事件 整型 按钮_绑定测试_按钮点击(元素句柄 来源句柄, 逻辑型* 是否拦截)
		绑定测试()
		返回 0
	函数 UI事件 整型 按钮_后台截图_按钮点击(元素句柄 来源句柄, 逻辑型* 是否拦截)
		后台截图()
		返回 0
	函数 UI事件 整型 按钮_后台找图_按钮点击(元素句柄 来源句柄, 逻辑型* 是否拦截)
		后台找图()
		返回 0
	函数 UI事件 整型 按钮_OP鼠标_按钮点击(元素句柄 来源句柄, 逻辑型* 是否拦截)
		OP鼠标()
		返回 0
	函数 UI事件 整型 按钮_雷电输入_按钮点击(元素句柄 来源句柄, 逻辑型* 是否拦截)
		雷电输入()
		返回 0
	函数 UI事件 整型 按钮_雷电点击_按钮点击(元素句柄 来源句柄, 逻辑型* 是否拦截)
		雷电点击()
		返回 0
	函数 UI事件 整型 启动窗口_即将销毁(窗口句柄 来源句柄, 逻辑型 *是否拦截)
		op.绑定_解绑窗口句柄()
		返回 0
	

主窗口类  主窗口  //将上面IDE生成的界面类在这里定义变量(实例化到具体变量)
函数 整型 入口函数_窗口() //窗口程序入口函数, 程序启动优先进入此函数
	//在进入UI前需要运行的代码写在这里

	炫彩_初始化(真)  //初始化设计器使用的炫彩界面库
	炫彩_启用自动重绘UI(真) //当修改UI后将自动调用重绘函数更新UI
	炫彩_启用DPI(真)
	炫彩_启用自动DPI(真)
	
	#加载资源文件     //指示在此处自动加载资源文件, 根据项目属性设置, 从文件 或 从内存
	主窗口.运行()    //运行上面设计器生成的类中的运行()函数
	//在进入UI后需要运行的代码写在这里

	炫彩_运行()  //运行消息循环
	炫彩_退出()  //程序退出释放界面库资源
	返回 0

// [文档]<炫语言> 在线手册: http://www.xcgui.com/doc
// [视频]<炫语言> 入门教程: https://www.bilibili.com/video/BV1KM411h7KK
//
// [文档]<炫彩界面库> 最新在线文档: http://www.xcgui.com/doc-ui
// [视频]<炫彩界面库> 通用教程: https://www.bilibili.com/video/BV1kA411A71p/
//
// [商城]炫彩资源商城: http://mall.xcgui.com
//
// *新手尽量不要使用指针, 例如: 字符串使用"文本型", 函数参数若要返回值使用引用 "函数名(整型 &输入输出参数)",
//  内存使用"字节集"
//
//  文本型   双字节字符串  =  炫语言默认字符串类型  =  "字符串W"
//  文本型A  单字节字符串  =  易语言字符串类型     =  A"字符串A"
//  utf8字符串  = U"UTF8字符串"
//  A2W()   单字节字符串 转 双字节字符串
//  W2A()   双字节字符串 转 单字节字符串
//  A =  char    =  单字节
//  w =  wchar_t = 双字节 = UNICODE
//  两个文件中结构体类型互相包含导致冲突, 请将结构体定义移动到一个独立文件中
