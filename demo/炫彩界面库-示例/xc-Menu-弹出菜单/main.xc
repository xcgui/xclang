函数 整型 WINAPI OnWndMenuSelect(整型 nID, 逻辑型 *是否拦截)
	调试输出("OnWndMenuSelect(): ", nID)
	返回 0

函数 整型 WINAPI OnBtnClick(元素句柄 hButton, 逻辑型 *是否拦截)
	矩形结构 rcButton
	元素_取坐标(hButton, &rcButton)
	点结构 pt = {rcButton.left, rcButton.bottom}
	菜单类  弹出菜单
	弹出菜单.创建()
	弹出菜单.添加项(101, "101")
	弹出菜单.添加项(102, "102")
	弹出菜单.添加项(0, "", XC_ID_ROOT, 菜单项标识_分隔栏) //分割栏
	弹出菜单.添加项(103, "103")
	
	弹出菜单.添加项(1031, "1031", 103)
	弹出菜单.添加项(1032, "1032", 103)
	弹出菜单.添加项(1033, "1033", 103)
		
	A坐标_客户区坐标到屏幕(窗口组件_取窗口句柄系统(hButton), &pt)
	弹出菜单.弹出(窗口组件_取窗口句柄系统(hButton), pt.x, pt.y)  //由窗口接收菜单事件
	//弹出菜单.弹出(元素_取HWND(hButton), pt.x, pt.y, hButton)  //由按钮元素接收菜单事件
	返回 0

函数 整型 入口函数_窗口()
	炫彩_初始化(真)       //初始化界面库
	窗口类 主窗口(0, 0, 400, 300, "xcgui-window", NULL, 炫彩窗口样式_默认)//创建窗口
	如果 主窗口._句柄
		
		按钮类  按钮(20, 50, 100, 30, "Button", 主窗口._句柄)
		按钮.注册事件C1(元素事件_按钮点击, OnBtnClick)
		
		主窗口.注册事件C(窗口事件_菜单项选择, OnWndMenuSelect)
		主窗口.调整布局() //调整布局
		主窗口.显示(SW_SHOW)  //显示窗口
		炫彩_运行()
	炫彩_退出()
	返回 0
	