{"version":3,"file":"272-930c3c.js","mappings":"6XAGMA,GAAaC,EAAAA,EAAAA,eAIhB,CACCC,QAAS,EACTC,WAAY,kBAAM,IAAI,EACtBC,YAAa,kBAAM,kBAAM,IAAI,KAG7BC,EAAO,EAEG,SAAUC,EAAIC,GAAkC,IAClDC,EADwBD,EAALE,MACnBD,SAERE,GAA8BC,EAAAA,EAAAA,UAAS,GAAEC,EAAAC,IAAAH,EAAA,GAAlCR,EAAOU,EAAA,GAAET,EAAUS,EAAA,GAC1BE,GAA4BH,EAAAA,EAAAA,WAAS,kBAAM,IAAII,GAAG,IAACC,EAAAH,IAAAC,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAqBxB,OAAOG,EAAAA,EAAAA,KAACnB,EAAWoB,SAAQ,CAACC,MAAO,CAAEnB,QAAAA,EAASC,WAAAA,EAAYC,YAnBtC,SAACkB,EAAYC,GAgB7B,OAPAL,GAAU,SAAAM,GAIN,OAHuB,IAAnBA,EAAUC,MACVtB,EAAWmB,GAER,IAAIP,IAAIS,GAAWE,IAAIJ,EAAIC,EACtC,IAbmB,WACfL,GAAU,SAAAM,GACN,IAAMG,EAAc,IAAIZ,IAAIS,GAE5B,OADqBG,EAAW,OAAQL,GAClBK,EAAcH,CACxC,GACJ,CAUJ,GAEuEhB,UACnEoB,EAAAA,EAAAA,MAACC,EAAS,CAAArB,SAAA,EACNW,EAAAA,EAAAA,KAACW,EAAG,CAAAtB,SACCuB,MAAMC,KAAKf,GAAQgB,KAAI,SAAAC,GAAiB,IAAAC,EAAAtB,IAAAqB,EAAA,GAAfE,EAAGD,EAAA,GAAEZ,EAAKY,EAAA,GAChC,OAAOhB,EAAAA,EAAAA,KAACkB,EAAO,CACXC,QAAS,kBAAMnC,EAAWiC,EAAI,EAC9BG,OAAQrC,IAAYkC,EAAG5B,SAEzBe,GAAK,KAAAiB,OADOJ,GAElB,OAEJjB,EAAAA,EAAAA,KAACsB,EAAO,CAAAjC,SACHA,QAIjB,CAEM,SAAUkC,EAAGC,GAAkC,IAA/BlC,EAAKkC,EAALlC,MACVc,EAAoBd,EAApBc,MAAOf,EAAaC,EAAbD,SACfoC,GAAiCC,EAAAA,EAAAA,YAAW7C,GAApCI,EAAWwC,EAAXxC,YAAaF,EAAO0C,EAAP1C,QAErB4C,GAAoBnC,EAAAA,EAAAA,WAAiB,WAEjC,OADAN,GAAQ,CAEZ,IAHO0C,EAGLlC,IAAAiC,EAAA,GAHc,GAShB,OAJAE,EAAAA,EAAAA,YAAU,WACN,OAAO5C,EAAY2C,EAAWxB,EAClC,GAAG,KAEIJ,EAAAA,EAAAA,KAAC8B,EAAI,CAACV,OAAQrC,IAAY6C,EAASvC,SAAGA,GACjD,CAEO,IAAM6B,EAAUa,EAAAA,OAAAA,IAAUC,IAAAA,EAAAC,IAAA,6lBAiB3B,SAAA3C,GAAK,OAAIA,EAAM8B,SAAUc,EAAAA,EAAAA,KAAGC,IAAAA,EAAAF,IAAA,iIAI7B,IAeQtB,EAAMoB,EAAAA,OAAAA,IAAUK,IAAAA,EAAAH,IAAA,uGAOhBH,EAAOC,EAAAA,OAAAA,IAAUM,IAAAA,EAAAJ,IAAA,6NACf,SAAA3C,GAAK,OAAIA,EAAM8B,OAAS,QAAU,MAAM,IAc1CE,EAAUS,EAAAA,OAAAA,IAAUO,IAAAA,EAAAL,IAAA,yIAMpBvB,EAAYqB,EAAAA,OAAAA,IAAUQ,IAAAA,EAAAN,IAAA,6B","sources":["webpack://TopWritePlugins.components/./src/components/html/tabs.tsx"],"sourcesContent":["import { css, GetComponentProps, styled } from 'topwrite';\r\nimport { createContext, ReactNode, useContext, useEffect, useState } from 'react';\r\n\r\nconst TabContext = createContext<{\r\n    current: number;\r\n    setCurrent: (index: number) => void;\r\n    registerTab: (id: number, label: ReactNode) => () => void;\r\n}>({\r\n    current: 0,\r\n    setCurrent: () => null,\r\n    registerTab: () => () => null,\r\n});\r\n\r\nlet uuid = 0;\r\n\r\nexport default function Tabs({ props }: GetComponentProps<any>) {\r\n    const { children } = props;\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const [labels, setLabels] = useState(() => new Map);\r\n\r\n    const registerTab = (id: number, label: ReactNode) => {\r\n        const unRegister = () => {\r\n            setLabels(oldLables => {\r\n                const cloneLabels = new Map(oldLables);\r\n                const deleteResult = cloneLabels.delete(id);\r\n                return deleteResult ? cloneLabels : oldLables;\r\n            });\r\n        };\r\n\r\n        setLabels(oldLables => {\r\n            if (oldLables.size === 0) {\r\n                setCurrent(id);\r\n            }\r\n            return new Map(oldLables).set(id, label);\r\n        });\r\n\r\n        return unRegister;\r\n    };\r\n\r\n    return <TabContext.Provider value={{ current, setCurrent, registerTab }}>\r\n        <Container>\r\n            <Nav>\r\n                {Array.from(labels).map(([key, label]) => {\r\n                    return <NavItem\r\n                        onClick={() => setCurrent(key)}\r\n                        active={current === key}\r\n                        key={`i-${key}`}\r\n                    >{label}</NavItem>;\r\n                })}\r\n            </Nav>\r\n            <Content>\r\n                {children}\r\n            </Content>\r\n        </Container>\r\n    </TabContext.Provider>;\r\n}\r\n\r\nexport function Tab({ props }: GetComponentProps<any>) {\r\n    const { label, children } = props;\r\n    const { registerTab, current } = useContext(TabContext);\r\n\r\n    const [currentId] = useState<number>(() => {\r\n        uuid += 1;\r\n        return uuid;\r\n    });\r\n\r\n    useEffect(() => {\r\n        return registerTab(currentId, label);\r\n    }, []);\r\n\r\n    return <Pane active={current === currentId}>{children}</Pane>;\r\n}\r\n\r\nexport const NavItem = styled.div<{ active: boolean; }>`\r\n    border: 1px solid var(--ttw-border-color);\r\n    cursor: pointer;\r\n    padding: 5px 16px;\r\n    background: var(--ttw-box-hover-background);\r\n    min-width: 80px;\r\n    text-align: center;\r\n    height: 42px;\r\n    line-height: 30px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    p {\r\n        line-height: 30px !important;\r\n    }\r\n\r\n    ${props => props.active && css`\r\n        background: var(--ttw-box-background);\r\n        border-bottom-color: transparent;\r\n        flex-shrink: 0;\r\n    `};\r\n\r\n    &:not(:first-child) {\r\n        border-left-color: transparent;\r\n    }\r\n\r\n    &:first-child {\r\n        border-top-left-radius: 4px;\r\n    }\r\n\r\n    &:last-child {\r\n        border-top-right-radius: 4px;\r\n    }\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n    display: flex;\r\n    margin-bottom: -1px;\r\n    flex-wrap: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const Pane = styled.div<{ active: boolean; }>`\r\n    display: ${props => props.active ? 'block' : 'none'};\r\n    padding: 16px;\r\n\r\n    &:empty:before {\r\n        content: '暂无内容';\r\n        color: var(--ttw-secondary-color);\r\n    }\r\n\r\n    & > *:last-child {\r\n        margin-bottom: 0 !important;\r\n    }\r\n`;\r\n\r\n\r\nexport const Content = styled.div`\r\n    border: 1px solid var(--ttw-border-color);\r\n    border-radius: 0 4px 4px 4px;\r\n    background: var(--ttw-box-background);\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    margin: 1em 0;\r\n`;\r\n"],"names":["TabContext","createContext","current","setCurrent","registerTab","uuid","Tabs","_ref","children","props","_useState","useState","_useState2","_slicedToArray","_useState3","Map","_useState4","labels","setLabels","_jsx","Provider","value","id","label","oldLables","size","set","cloneLabels","_jsxs","Container","Nav","Array","from","map","_ref2","_ref3","key","NavItem","onClick","active","concat","Content","Tab","_ref4","_useContext","useContext","_useState5","currentId","useEffect","Pane","styled","_templateObject","_taggedTemplateLiteral","css","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6"],"sourceRoot":""}