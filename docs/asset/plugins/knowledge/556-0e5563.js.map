{"version":3,"file":"556-0e5563.js","mappings":"w6BASc,SAAUA,EAAKC,GAAiE,IAAAC,EAAAD,EAA9DE,MAASC,EAAGF,EAAHE,IAAQD,EAAKE,IAAAH,EAAAI,GAAIC,EAAQN,EAARM,SAChDC,GAAUC,EAAAA,EAAAA,MACVC,GAAOC,EAAAA,EAAAA,WAYb,OAVAP,GAAMQ,EAAAA,EAAAA,UAAQ,WACV,GAAIR,KAAQS,EAAAA,EAAAA,OAAMT,GAAM,CACpB,IAAMU,EAASN,EAAQO,YAAYC,IAAAA,KAAUA,IAAAA,QAAaC,EAAAA,QAAAA,SAAAA,UAA4Bb,IAClFU,IACAV,EAAMU,EAAO,G,CAGrB,OAAOV,CACX,GAAG,CAACM,KAEGQ,EAAAA,EAAAA,cAAaX,EAAW,CAC3BJ,MAAKgB,EAAAA,EAAA,GACEhB,GAAK,IACRC,IAAAA,KAGZ,C","sources":["webpack://TopWritePlugins.knowledge/./src/components/reader/asset.tsx"],"sourcesContent":["import { history, InjectedCompProps, isUrl, useFile } from 'topwrite';\r\nimport path from 'path';\r\nimport { useSubBook } from '@/lib/sub-book';\r\nimport { cloneElement, useMemo } from 'react';\r\n\r\ninterface Props {\r\n    src?: string;\r\n}\r\n\r\nexport default function Asset({ props: { src, ...props }, children }: InjectedCompProps<Props>) {\r\n    const subBook = useSubBook();\r\n    const file = useFile();\r\n\r\n    src = useMemo(() => {\r\n        if (src && !isUrl(src)) {\r\n            const result = subBook.validateUrl(path.join(path.dirname(history.location.pathname), src));\r\n            if (result) {\r\n                src = result[1];\r\n            }\r\n        }\r\n        return src;\r\n    }, [file]);\r\n\r\n    return cloneElement(children!, {\r\n        props: {\r\n            ...props,\r\n            src\r\n        }\r\n    });\r\n}\r\n"],"names":["Asset","_ref","_ref$props","props","src","_objectWithoutProperties","_excluded","children","subBook","useSubBook","file","useFile","useMemo","isUrl","result","validateUrl","path","history","cloneElement","_objectSpread"],"sourceRoot":""}